local users = [
    "jessica77173",
    "megan42874",
    "kerrysanchez1",
    "bonnie00429",
    "caleb52194",
    "acastillo229",
    "rosesandra3",
    "brandon61326",
    "lunajanice2",
    "vwells935",
    "pnguyen296",
    "antonio04968",
    "teresawalker812",
    "edwardsalicia",
    "wallaceandrew4",
    "tanneralbert3",
    "emilyhart943",
    "mjames060",
    "brittany1150",
    "juarezisabel",
    "theresabush",
    "david80782",
    "ryan32278",
    "schwartzwilliam",
    "michael60583",
    "vbrown904",
    "valerierussell832",
    "scott34073",
    "rmartin966",
    "bradley74267",
    "rpham8",
    "michaelle012",
    "nguyenjeffrey",
    "hughesjill9",
    "bmorgan569",
    "cynthiacabrera7",
    "markmcbride0",
    "bradley85944",
    "juliepetty7",
    "smithsusan103",
    "codycasey4",
    "wrightwilliam37",
    "mtaylor773",
    "jonesjonathan176",
    "porterdaniel46",
    "walkerdevin12",
    "christinawilliams509",
    "carolkim444",
    "pkennedy02",
    "xavierbailey0",
    "nruiz878",
    "pbrennan_6",
    "hdunn71",
    "kpatrick956",
    "ybender3",
    "joseph20566",
    "timothypratt9",
    "chaseanna2",
    "chase35505",
    "paul88446",
    "hjenkins343",
    "nicholasgarcia344",
    "choijeremy0",
    "lisa48684",
    "woodthomas0",
    "floresmonica6",
    "christina31662",
    "pmassey3",
    "carrtanner",
    "davidrojas275",
    "meredith2775",
    "michael42618",
    "thomassamantha3",
    "yalexander0",
    "burkestephen72",
    "blackheather2",
    "imiles71",
    "lboyer8",
    "davidjones646",
    "jesusmcdonald27",
    "dhall950",
    "lthompson_23",
    "currymarcus5",
    "ricechris5",
    "dmartin390",
    "iweber521",
    "thomasjoel4",
    "matthewmcintosh9",
    "sandra64699",
    "corey3972",
    "mvalencia34",
    "ocooper981",
    "xbarrett9",
    "tiffanydalton",
    "jason53101",
    "caroline29078",
    "tnewton64",
    "curtisamanda",
    "ihernandez077",
    "carterjamie5",
    "feliciaaustin0",
    "bpayne756",
    "katherinetorres353",
    "mcollins360",
    "nielsenbrandon",
    "whampton1",
    "qburton3",
    "charlespittman149",
    "john02475",
    "samanthabond4",
    "kguerra_4",
    "cindy4883",
    "jphillips733",
    "hannahjohnson0",
    "gyoung838",
    "laura41881",
    "kimberly74798",
    "kathleenfrench11",
    "mitchellcesar",
    "aliciagalvan625",
    "burnsjoshua",
    "greenkeith087",
    "elizabeth72717",
    "itaylor889",
    "christopher27433",
    "svincent729",
    "francisco68841",
    "vicki6808",
    "bennettjoanne1",
    "robertscarol",
    "joshua57173",
    "kingshannon48",
    "fevans0",
    "qgonzalez902",
    "justinsanford651",
    "kevincoleman_8",
    "lgray951",
    "greeneandrew7",
    "allenkeith7",
    "smithangela184",
    "cynthia72290",
    "murrayshannon"
}

local troopsToSend = {
    "GuardianClockman",
}

local TTD
local save
local handler
local Network
local Invoke
local Fire
task.spawn(function()
    TTD = require(game:GetService("ReplicatedStorage").MultiboxFramework)
    save = TTD.Replicate:WaitForReplica("PlayerData-" .. game:GetService("Players").LocalPlayer.UserId)

    repeat
        pcall(function()
            Network = TTD.Network
            Invoke = Network.Invoke
            Fire = Network.Fire
        end)
        task.wait(0.1)
    until Network ~= nil and Invoke ~= nil and Fire ~= nil
end)

Invoke = Network.Invoke; local GetFunc = getupvalue(Invoke, 1)
Fire = Network.Fire; local GetEvent = getupvalue(Fire, 1)

coroutine.wrap(function()
    setidentity(2)
    hookfunc(getupvalue(GetFunc, 1), function()
        return true
    end)
    setidentity(8)
end)()

coroutine.wrap(function()
    setidentity(2)
    hookfunc(getupvalue(GetEvent, 1), function()
        return true
    end)
    setidentity(8)
end)()


local invTroops = {}
function getInventoryTroops()
    invTroops = {}
    local save = TTD.Replicate:WaitForReplica("PlayerData-" .. game:GetService("Players").LocalPlayer.UserId)
    for name, v in pairs(save._data.Inventory.Troops) do
        for i, v in pairs(v) do
            invTroops[i] = name
        end
    end
    return invTroops
end

local coins
function getCoinAmt()
    coins = 0
    local save = TTD.Replicate:WaitForReplica("PlayerData-" .. game:GetService("Players").LocalPlayer.UserId)
    for i, v in pairs(save._data) do
        if i == "Currencies" then
            coins = v.Coins
        end
    end
    return coins
end

function hasTroop(id)
    troops = getInventoryTroops()
    for i, v in troops do
        if i == id then
            return true
        end
    end
    return false
end

startAmt = getCoinAmt()

local amt = 0

for i, user in users do
    local sent = {}
    for i, v in getInventoryTroops() do
        if table.find(troopsToSend, v) and not table.find(sent, v) then
            table.insert(sent, v)
            local oldC = getCoinAmt()
            local st = tick()
            repeat
                Invoke("PostOffice_SendGift", game.Players:GetUserIdFromNameAsync(user), "Troops", i, 0,
                    tostring(math.random(1, 10000)))
                task.wait(0.05) -- Giảm thời gian chờ xuống còn 0.05 giây
            until getCoinAmt() < oldC and not hasTroop(i)
            print("sent","time taken:",tick()-st)
        end
    end
    print('finished user:',user)
end

print('Should have sent:', amt)
